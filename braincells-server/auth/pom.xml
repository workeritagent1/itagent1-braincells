<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.wabc</groupId>
        <artifactId>braincell-server</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <groupId>org.wabc</groupId>
    <artifactId>auth</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>oauth2</name>
    <description>oauth2</description>
    <properties>

    </properties>
    <dependencies>

        <dependency>
            <groupId>org.wabc</groupId>
            <artifactId>commons</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>

        <!--
          不需要显式添加 spring-boot-starter 依赖到 auth 和 system 模块。
          spring-boot-starter 只是最基础的 Spring Boot 启动器（包含核心自动配置、日志等），
          但你在 auth 和 system 子模块里已经用了比如：
                spring-boot-starter-web
                spring-boot-starter-data-redis
                spring-boot-starter-security
                spring-boot-starter-validation
           直接用需要的业务 starter 即可，最小化依赖，按需引用。
         -->

        <!-- SpringBoot Starter: 包含Web和常用组件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- 连接池HikariCP: SpringBoot默认 -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <!-- Redis: Token持久化和权限信息同步 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- oauth2.1
         以下四组依赖包含在上文spring-boot-dependencies中；父项目此处无需声明版本；子项目按需直接引入坐标取用，
         0.Spring Security（认证、鉴权安全框架基础）； 虽然client,server会默认也引入，
         spring-boot-starter-security
         1. OAuth 2.1 客户端功能（如需支持第三方登录）
         spring-boot-starter-oauth2-client
         2. OAuth 2.1 资源服务器（保护 API）； JWT 支持：Spring Security OAuth2 Resource Server（用于JWT令牌的签发与校验，服务端、网关等用）
         spring-boot-starter-oauth2-resource-server
         3. OAuth 2.1 授权服务器（自建单点登录）
         spring-boot-starter-oauth2-resource-server
         4. JWT 与 JOSE 支持（必须）
         nimbus-jose-jwt
     -->
        <!-- OAuth2服务、OIDC/JWT -->
        <!-- Spring Security: 认证授权配置 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <!-- 【用途】安全认证 -->
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-authorization-server</artifactId>
            <!-- 【用途】实现 OAuth2.1 服务端/授权流程（必须含PKCE）-->
        </dependency>

        <!-- OAuth2 认证客户端-->
      <!--  <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>-->

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
            <!-- 【用途】JWT、JWK签名验证支持 -->
        </dependency>

        <!-- openapi3接口文档 -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
        </dependency>

        <!-- OpenFeign（业务服务间调用） -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <!-- Nacos: 配置中心注册发现 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>

        <!-- 日志 SLF4J/Logback（springboot默认） -->


    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.jks</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.jks</include>
                </includes>
            </resource>
        </resources>
    </build>

</project>
